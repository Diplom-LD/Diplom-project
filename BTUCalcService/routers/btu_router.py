import json
from fastapi import APIRouter, HTTPException, Request
from models.btu_request_model import BTURequestModel
from models.btu_response_model import BTUResponseModel
from services.btu_calculator import calculate_btu

router = APIRouter()

@router.post(
    "/BTUCalcService/calculate_btu",
    response_model=BTUResponseModel,
    summary="–†–∞—Å—Å—á–∏—Ç–∞—Ç—å –º–æ—â–Ω–æ—Å—Ç—å BTU",
    description="–†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—É—é –º–æ—â–Ω–æ—Å—Ç—å –∫–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä–∞ (–≤ BTU –∏ –∫–í—Ç) –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∫–æ–º–Ω–∞—Ç—ã."
)
async def calculate_btu_route(request: Request):
    """–†–∞—Å—Å—á–∏—Ç–∞—Ç—å –º–æ—â–Ω–æ—Å—Ç—å BTU –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∫–æ–º–Ω–∞—Ç—ã."""
    try:
        body = await request.json() 
        print("üì• –ü–æ–ª—É—á–µ–Ω—ã –≤—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:", json.dumps(body, indent=2, ensure_ascii=False))  

        validated_request = BTURequestModel(**body)  
        result = calculate_btu(validated_request)
        return result
    except Exception as e:
        print("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞:", str(e)) 
        raise HTTPException(status_code=400, detail=f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞—Å—á—ë—Ç–µ BTU: {str(e)}")
